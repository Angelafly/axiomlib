/****************************************************************************
*				Nets.cxx
*
*	Description:	Функции класса Nets - Реализация
*	Author:		dk
*	History:		
*
****************************************************************************/
#include "Nets.h"

using namespace AxiomLib;


// Стандартный конструктор - задание значений по умолчанию
Nets::Nets (void) {
	status = false;
}


// Стандартный деструктор - пустой
Nets::~Nets () {

}


/****************************************************************************
*				Nets::prepare
*
*	Description:	Функция обучает сети класса по заданным в параметрах разметках
*	Parameters:		refMarkupSetSimple - вектор разметок по каждому из 
*					классов нештатного поведения
*	Returns:		0
*	Throws:		AxiomLibException - в случае ошибки
*	Author:		dk
*	History:
*
****************************************************************************/
int Nets::prepare (std::vector <RefMarkupSetSimple> &refMarkupSetSimple) {
	

	status = true;
	return 0;
}

 
/****************************************************************************
*				Nets::check
*
*	Description:	Функция проверки, есть ли к отсчету i в ряду row одна из
*					разметок, запомненных на обучении. При этом возвращается 
*					достоверность наиболее подходящей разметки.
*	Parameters:		resNum - индекс класса нештатного поведения, заполняется
*							в данной функцие
*					row - анализируемый ряд разметки
*					i - отсчет, до которого искать вхождения разметок
*	Returns:		double (от 0 до 1) - достоверность значения, записываемого
*					в параметр resNum
*	Throws:		AxiomLibException - в случае ошибки
*	Author:		dk
*	History:
*
****************************************************************************/
double Nets::check (int &resNum, std::vector <int> &row, long int &i) const {

	return 0.0;
}
