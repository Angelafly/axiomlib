/****************************************************************************
*						TestTS
*
*	Description:	Данный класс служит как еденица хранения тестовой информации
*				То есть в нем присутствуют поля для хранения временного ряда и для
*				хранения корректной разметки данного ряда.
*	Author:		dk
*	History:     	-
*
****************************************************************************/

#ifndef __AXIOMS_LIB_TestTS_HXX
#define __AXIOMS_LIB_TestTS_HXX

#include "MultiTS.h"
    
namespace AxiomLib {

class TestTS {

public:
		// Данные класса

	// Поле для хранения временного ряда
	MultiTS data;
	
	// Поле для хранения корректной разметки временного ряда
	MultiTS correct;

	// Поле для хранения корректной разметки временного ряда - в виде конкретного вектора целых чисел
	std::vector<int> corrMarkUp;

		// Функции класса

	// Конструктор класса
	TestTS ();

	// Деструктор класса
	~TestTS ();
	
	// Функция выдает требуемый ряд по запросу - элемент запроса - номер поля в каконической последовательности пармаметров
	bool getTSByIndex(std::vector<double> &vec, int i) const;

	// Функция выдает требуемый ряд по запросу - элемент запроса - номер поля в каконической последовательности пармаметров
	// Отличие от предыдущей функции - в формате параметров функции - в случае, если нужен вектор целых чисел, то выдается именно такой вектор
	bool getTSByIndex(std::vector<int> &vec, int i) const;

	// Функция устанавливает новое значение ряду - элемент запроса - новый ряд и номер поля в каконической последовательности пармаметров
	bool setTSByIndex(std::vector<double> &vec, int i);

	// Функция устанавливает новое значение ряду - элемент запроса - новый ряд и номер поля в каконической последовательности пармаметров
	bool setTSByIndex(std::vector<int> &vec, int i);
	
	// Функция возвращает число временных рядов в данной тестовой разметке
	int size(void) const;

	// Функция создает реплику корректной разметки в целочисленном векторе corrMarkUp
	bool makeIntClone (void);
	
}; //end of class

// структура хранения тестовых временных рядов в наборе данных
typedef std::vector<TestTS> TestSets;

}; //  end of namespace

#endif /* __AXIOMS_LIB_MultiTS_HXX */
